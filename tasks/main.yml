---

- name: Check if we already have a certificate
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
  register: letsencrypt_cert

- name: Get an SSL certificate for {{ domain }} from Let's Encrypt
  ansible.builtin.command: "/usr/bin/certbot certonly --webroot -w {{ web_path_letsencrypt }} --preferred-challenges http-01 -d {{ domain }} --register-unsafely-without-email --agree-tos -n"
  args:
    creates: "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
  when:
    - not letsencrypt_cert.stat.exists
    - testing is undefined
    - letsencrypt_method == 'webroot'

- name: Get an SSL certificate for {{ domain }} from Let's Encrypt
  ansible.builtin.command: "/usr/bin/certbot certonly --standalone --preferred-challenges http-01 -d {{ domain }} --register-unsafely-without-email --agree-tos -n"
  args:
    creates: "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
  when:
    - not letsencrypt_cert.stat.exists
    - testing is undefined
    - letsencrypt_method == 'standalone'

- name: Configure Let's Encrypt. Delete extra line.
  ansible.builtin.lineinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    regexp: '^pref_challs'
    state: absent
  when:
    - testing is undefined

- name: Configure Let's Encrypt. Change auto renewal method.
  ansible.builtin.lineinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    regexp: '^authenticator'
    line: 'authenticator = webroot'
    state: present
    mode: 0644
  when:
    - testing is undefined

- name: Configure Let's Encrypt. Configure renewal hook.
  ansible.builtin.blockinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    insertbefore: "[[webroot_map]]"
    block: "{{ letsencrypt_renewal_conf }}"
    state: present
  when:
    - testing is undefined
    - letsencrypt_renew_hook is defined

# Alternative if we are testing (as we can't get Let's Encrypt certificates)

- name: Create live directory for testing keys
  ansible.builtin.file:
    dest: /etc/letsencrypt/live/{{ domain }}
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - testing is defined
    - not letsencrypt_cert.stat.exists

- name: Install openssl
  ansible.builtin.apt:
    pkg: openssl
    state: present
  when:
    - testing is defined
    - not letsencrypt_cert.stat.exists

- name: Create self-signed certificate, if testing.
  ansible.builtin.command: >
    openssl req -x509 -nodes -subj '/CN={{ domain }}' -days 30
    -newkey rsa:4096 -sha256 -keyout /etc/letsencrypt/live/{{ domain }}/privkey.pem
    -out /etc/letsencrypt/live/{{ domain }}/cert.pem
  args:
    creates: /etc/letsencrypt/live/{{ domain }}/cert.pem
  ignore_errors: true
  when:
    - testing is defined
    - not letsencrypt_cert.stat.exists

- name: Create a combined SSL cert for testing
  ansible.builtin.shell: cat /etc/letsencrypt/live/{{ domain }}/cert.pem >
    /etc/letsencrypt/live/{{ domain }}/fullchain.pem
  when:
    - testing is defined
    - not letsencrypt_cert.stat.exists

- name: Set permissions on combined SSL public cert
  ansible.builtin.file:
    name: "{{ item }}"
    mode: 0644
  with_items:
    - "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
    - "/etc/letsencrypt/live/{{ domain }}/cert.pem"
    - "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
  when:
    - testing is defined
